// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Podbase.DataAccess;

namespace Podbase.DataAccess.Migrations
{
    [DbContext(typeof(PodbaseContext))]
    partial class PodbaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Podbase.Model.Account", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new { UserId = 1, FirstName = "Lars", LastName = "Haugeli", Password = "Sofimjau123", Username = "larshaugeli" },
                        new { UserId = 2, FirstName = "Sofi", LastName = "Mjaupus", Password = "Sofimjau123", Username = "sofimjaupus" }
                    );
                });

            modelBuilder.Entity("Podbase.Model.AccountPodcast", b =>
                {
                    b.Property<int>("PodcastId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.HasKey("PodcastId");

                    b.ToTable("AccountPodcasts");

                    b.HasData(
                        new { PodcastId = 1, UserId = 1 },
                        new { PodcastId = 2, UserId = 1 }
                    );
                });

            modelBuilder.Entity("Podbase.Model.Podcast", b =>
                {
                    b.Property<int>("PodcastId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountPodcastPodcastId");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("Genre");

                    b.Property<string>("Name");

                    b.Property<int>("Rating");

                    b.HasKey("PodcastId");

                    b.HasIndex("AccountPodcastPodcastId");

                    b.ToTable("Podcasts");

                    b.HasData(
                        new { PodcastId = 1, Creator = "NRK", Description = "Gøy", Genre = "Humor", Name = "Radioresepsjonen", Rating = 0 },
                        new { PodcastId = 2, Creator = "P4", Description = "Hehe", Genre = "Humor", Name = "Misjonen", Rating = 0 }
                    );
                });

            modelBuilder.Entity("Podbase.Model.Podcast", b =>
                {
                    b.HasOne("Podbase.Model.AccountPodcast")
                        .WithMany("PodcastsPerAccount")
                        .HasForeignKey("AccountPodcastPodcastId");
                });
#pragma warning restore 612, 618
        }
    }
}
